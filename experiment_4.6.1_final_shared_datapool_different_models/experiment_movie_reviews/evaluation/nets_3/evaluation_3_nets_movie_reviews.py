import numpy as np
import matplotlib.pyplot as plt

VERLAUF_1_TESTSET_ACCURACY = [0.6675694653425619, 0.7064901193700471, 0.7307653726552312, 0.7410974019460327, 0.7472163707493229, 0.7549403149764269, 0.7637676798074029, 0.7644698565553215, 0.7681813622228909, 0.7678804293309258, 0.7706891363226, 0.7749021968101113, 0.7762062393419601, 0.7779115257297623, 0.775905306449995, 0.7744006419901696, 0.7760056174139833, 0.7769084160898786, 0.7776105928377972, 0.7764068612699369]
VERLAUF_1_TESTSET_PRECISION = [0.6630179827990618, 0.691007060572278, 0.7281572676727561, 0.7352537722908093, 0.7277942264988897, 0.7474176573767297, 0.7672431332655137, 0.7417400881057269, 0.7603821407681809, 0.754095238095238, 0.7530980097634247, 0.7673828125, 0.7728625272763341, 0.7824489795918367, 0.7693061544492356, 0.7770119602675857, 0.7760594496886926, 0.7748106815464328, 0.7734915924826904, 0.7796059313426772]
VERLAUF_1_TESTSET_RECALL = [0.6808510638297872, 0.746487354476114, 0.7360497792051385, 0.7531112003211562, 0.7894419911682056, 0.769771176234444, 0.7569249297470895, 0.8111200321156162, 0.7828181453231634, 0.7946607788036933, 0.8050983540746688, 0.7886391007627459, 0.7820152549177037, 0.7695704536330791, 0.7878362103572862, 0.7693697310317141, 0.7755921316740265, 0.7804094741067844, 0.7848253713368125, 0.7703733440385387]
VERLAUF_1_TESTSET_F1 = [0.6718162012279659, 0.7176765727518333, 0.7320822519464963, 0.74407535944472, 0.75736568457539, 0.7584297438939979, 0.7620491057896333, 0.7748801534036435, 0.7714370487587776, 0.7738467552775606, 0.7782305005820721, 0.7778657691546228, 0.7774119525092289, 0.7759562841530054, 0.7784609282030941, 0.773171961674231, 0.7758257203092059, 0.7776, 0.7791172661153731, 0.774962140333165]

VERLAUF_2_TESTSET_ACCURACY = [0.6660648008827365, 0.7064901193700471, 0.7303641287992778, 0.7409970909820444, 0.747517303641288, 0.7549403149764269, 0.764068612699368, 0.7641689236633564, 0.7681813622228909, 0.7674791854749724, 0.7704885143946233, 0.7761059283779718, 0.7767077941619019, 0.7783127695857157, 0.775905306449995, 0.7753034406660648, 0.7763065503059484, 0.7769084160898786, 0.775905306449995, 0.7751028187380881]
VERLAUF_2_TESTSET_PRECISION = [0.6617100371747212, 0.691007060572278, 0.727579365079365, 0.735201881615053, 0.728114010734777, 0.7475141353090271, 0.7677117263843648, 0.7417754089321816, 0.7605853658536585, 0.7534246575342466, 0.7538635506973238, 0.7686596326690114, 0.7734126984126984, 0.782051282051282, 0.7701533621706645, 0.7778678556951764, 0.7773075372833534, 0.7753594249201278, 0.7731610337972167, 0.7801635991820041]
VERLAUF_2_TESTSET_RECALL = [0.6788438378161381, 0.746487354476114, 0.7360497792051385, 0.7529104777197912, 0.7896427137695704, 0.7695704536330791, 0.7569249297470895, 0.8101164191087916, 0.7824167001204335, 0.7948615014050582, 0.8028904054596547, 0.7896427137695704, 0.7824167001204335, 0.7713769570453634, 0.7862304295463669, 0.7703733440385387, 0.7741870734644721, 0.7794058610999599, 0.7806101967081494, 0.7657567242071457]
VERLAUF_2_TESTSET_F1 = [0.6701674427821263, 0.7176765727518333, 0.7317900618638994, 0.7439508131693772, 0.7576311988444872, 0.7583819602413213, 0.7622801697998788, 0.7744411397870095, 0.7713465914712576, 0.7735885915217815, 0.7776049766718508, 0.779009900990099, 0.7778886449810417, 0.776677445432498, 0.778108859753675, 0.7741024606696248, 0.7757441673370877, 0.7773773773773773, 0.7768677586895724, 0.7728930307941653]

VERLAUF_3_TESTSET_ACCURACY = [0.6675694653425619, 0.7064901193700471, 0.7305647507272545, 0.7409970909820444, 0.747517303641288, 0.7546393820844618, 0.7639683017353797, 0.7650717223392517, 0.7683819841508677, 0.7673788745109841, 0.7704885143946233, 0.775905306449995, 0.7757046845220182, 0.7797171230815528, 0.7761059283779718, 0.7749021968101113, 0.7753034406660648, 0.7776105928377972, 0.7761059283779718, 0.7756043735580299]
VERLAUF_3_TESTSET_PRECISION = [0.66327329678935, 0.691007060572278, 0.7278682016673284, 0.7351097178683386, 0.728114010734777, 0.746980911569926, 0.7674465920651068, 0.7424687729610581, 0.7604755408302475, 0.7533777354900095, 0.7538635506973238, 0.768359375, 0.7727453317441398, 0.7834757834757835, 0.7673017107309487, 0.7770133549170376, 0.7751906864712966, 0.7727362398895246, 0.7715244865718799, 0.7783411072804705]
VERLAUF_3_TESTSET_RECALL = [0.6800481734243276, 0.746487354476114, 0.7360497792051385, 0.7531112003211562, 0.7896427137695704, 0.769771176234444, 0.7571256523484544, 0.8113207547169812, 0.7832195905258932, 0.7946607788036933, 0.8028904054596547, 0.7896427137695704, 0.7808109193095143, 0.7727820152549177, 0.7922521075873143, 0.7707747892412685, 0.7751906864712966, 0.7862304295463669, 0.7842232035327178, 0.7703733440385387]
VERLAUF_3_TESTSET_F1 = [0.6715559960356788, 0.7176765727518333, 0.7319361277445111, 0.7440015863573269, 0.7576311988444872, 0.7582048240411231, 0.762251187228453, 0.7753692691348553, 0.7716800158212203, 0.7734687896844781, 0.7776049766718508, 0.7788556721441297, 0.7767571884984025, 0.7780921584478577, 0.7795773256962275, 0.7738814993954051, 0.7751906864712966, 0.7794249328425032, 0.777822018713916, 0.7743367295470595]

VERLAUF_4_TESTSET_ACCURACY = [0.6671682214866085, 0.706991674189989, 0.7307653726552312, 0.7412980238740094, 0.7474169926772997, 0.7549403149764269, 0.7638679907713913, 0.7650717223392517, 0.7678804293309258, 0.7675794964389607, 0.7716922459624836, 0.7753034406660648, 0.7769084160898786, 0.7790149463336342, 0.7772093489818437, 0.773999398134216, 0.7771090380178554, 0.778413080549704, 0.7789146353696459, 0.7757046845220182]
VERLAUF_4_TESTSET_PRECISION = [0.6629455542499021, 0.6916496187465129, 0.7279761904761904, 0.7352653221069121, 0.7278949315575287, 0.7474176573767297, 0.7673992673992674, 0.7424687729610581, 0.7600389863547758, 0.7538578776909888, 0.7537509377344336, 0.7680876026593665, 0.7739372268573699, 0.7845586729469588, 0.7720197044334975, 0.7757122651040614, 0.7768860353130016, 0.7760302608003186, 0.7749406175771971, 0.7795195439739414]
VERLAUF_4_TESTSET_RECALL = [0.6794460056202328, 0.746487354476114, 0.7364512244078684, 0.7537133681252509, 0.7898434363709353, 0.769771176234444, 0.7569249297470895, 0.8113207547169812, 0.7826174227217985, 0.7942593336009635, 0.8067041348855881, 0.788438378161381, 0.7820152549177037, 0.7689682858289844, 0.7864311521477318, 0.7705740666399037, 0.7771979124849459, 0.7824167001204335, 0.7858289843436371, 0.7685668406262545]
VERLAUF_4_TESTSET_F1 = [0.6710943695479779, 0.7180229751906555, 0.7321891837956497, 0.744375061948657, 0.7576049287639584, 0.7584297438939979, 0.7621261115602262, 0.7753692691348553, 0.7711629746835442, 0.7735314241032156, 0.7793290672871825, 0.7781299524564184, 0.7779552715654952, 0.776685250886974, 0.7791587948692453, 0.7731346289396839, 0.7770419426048564, 0.7792103948025987, 0.7803468208092486, 0.7740044471396808]

VERLAUF_5_TESTSET_ACCURACY = [0.66646604473869, 0.7073929180459424, 0.7303641287992778, 0.7417995786939513, 0.7481191694252182, 0.7547396930484502, 0.7642692346273448, 0.7647707894472866, 0.7683819841508677, 0.7672785635469956, 0.7710903801785535, 0.7757046845220182, 0.775905306449995, 0.7793158792255993, 0.7753034406660648, 0.7733975323502859, 0.7746012639181462, 0.7777109038017855, 0.7747015748821346, 0.7767077941619019]
VERLAUF_5_TESTSET_PRECISION = [0.6622283140787155, 0.6922360826661702, 0.7270387965162312, 0.7356164383561644, 0.7285000924727205, 0.7467418790118654, 0.7673709874034945, 0.7421487603305785, 0.7604755408302475, 0.753234398782344, 0.7529985007496252, 0.768059351815697, 0.7725109083696946, 0.7843417825020441, 0.7680876026593665, 0.7749949505150475, 0.775206278929362, 0.7737529691211401, 0.7716441620333598, 0.7799674928890695]
VERLAUF_5_TESTSET_RECALL = [0.6788438378161381, 0.7462866318747491, 0.737254114813328, 0.7545162585307106, 0.790646326776395, 0.7705740666399037, 0.758129265355279, 0.8111200321156162, 0.7832195905258932, 0.7946607788036933, 0.8065034122842232, 0.7896427137695704, 0.7818145323163388, 0.7701726214371738, 0.788438378161381, 0.7701726214371738, 0.7731834604576475, 0.7846246487354476, 0.7800080289040546, 0.7705740666399037]
VERLAUF_5_TESTSET_F1 = [0.6704331450094162, 0.7182459190572781, 0.7321108232011162, 0.7449464922711059, 0.7583020502454519, 0.758470809048701, 0.7627221324717286, 0.7751030977270548, 0.7716800158212203, 0.773393240867357, 0.7788331071913162, 0.778701504354711, 0.7771348762968875, 0.7771926271014787, 0.7781299524564184, 0.7725762609483541, 0.7741935483870968, 0.7791508869842535, 0.7758035536035137, 0.7752423263327949]




if __name__ == "__main__":
    VERLAUF_1_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_1_TESTSET_ACCURACY)
    VERLAUF_2_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_2_TESTSET_ACCURACY)
    VERLAUF_3_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_3_TESTSET_ACCURACY)
    VERLAUF_4_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_4_TESTSET_ACCURACY)
    VERLAUF_5_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_5_TESTSET_ACCURACY)

    VERLAUF_1_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_ACCURACY[-10:])
    VERLAUF_2_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_ACCURACY[-10:])
    VERLAUF_3_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_ACCURACY[-10:])
    VERLAUF_4_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_ACCURACY[-10:])
    VERLAUF_5_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_ACCURACY[-10:])

    VERLAUF_TESTSET_MEAN_ACCURACY =  np.mean([VERLAUF_1_TESTSET_MEAN_ACCURACY, VERLAUF_2_TESTSET_MEAN_ACCURACY, VERLAUF_3_TESTSET_MEAN_ACCURACY, VERLAUF_4_TESTSET_MEAN_ACCURACY, VERLAUF_5_TESTSET_MEAN_ACCURACY])
    VERLAUF_TESTSET_MEAN_ACCURACY_SECOND_HALF =  np.mean([VERLAUF_1_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_ACCURACY_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_ACCURACY: ", VERLAUF_TESTSET_MEAN_ACCURACY)
    print("VERLAUF_TESTSET_MEAN_ACCURACY_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_ACCURACY_SECOND_HALF)



    VERLAUF_1_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_1_TESTSET_PRECISION)
    VERLAUF_2_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_2_TESTSET_PRECISION)
    VERLAUF_3_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_3_TESTSET_PRECISION)
    VERLAUF_4_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_4_TESTSET_PRECISION)
    VERLAUF_5_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_5_TESTSET_PRECISION)

    VERLAUF_1_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_PRECISION[-10:])
    VERLAUF_2_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_PRECISION[-10:])
    VERLAUF_3_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_PRECISION[-10:])
    VERLAUF_4_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_PRECISION[-10:])
    VERLAUF_5_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_PRECISION[-10:])

    VERLAUF_TESTSET_MEAN_PRECISION =  np.mean([VERLAUF_1_TESTSET_MEAN_PRECISION, VERLAUF_2_TESTSET_MEAN_PRECISION, VERLAUF_3_TESTSET_MEAN_PRECISION, VERLAUF_4_TESTSET_MEAN_PRECISION, VERLAUF_5_TESTSET_MEAN_PRECISION])
    VERLAUF_TESTSET_MEAN_PRECISION_SECOND_HALF =  np.mean([VERLAUF_1_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_PRECISION_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_PRECISION: ", VERLAUF_TESTSET_MEAN_PRECISION)
    print("VERLAUF_TESTSET_MEAN_PRECISION_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_PRECISION_SECOND_HALF)



    VERLAUF_1_TESTSET_MEAN_RECALL = np.mean(VERLAUF_1_TESTSET_RECALL)
    VERLAUF_2_TESTSET_MEAN_RECALL = np.mean(VERLAUF_2_TESTSET_RECALL)
    VERLAUF_3_TESTSET_MEAN_RECALL = np.mean(VERLAUF_3_TESTSET_RECALL)
    VERLAUF_4_TESTSET_MEAN_RECALL = np.mean(VERLAUF_4_TESTSET_RECALL)
    VERLAUF_5_TESTSET_MEAN_RECALL = np.mean(VERLAUF_5_TESTSET_RECALL)

    VERLAUF_1_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_RECALL[-10:])
    VERLAUF_2_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_RECALL[-10:])
    VERLAUF_3_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_RECALL[-10:])
    VERLAUF_4_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_RECALL[-10:])
    VERLAUF_5_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_RECALL[-10:])

    VERLAUF_TESTSET_MEAN_RECALL=  np.mean([VERLAUF_1_TESTSET_MEAN_RECALL, VERLAUF_2_TESTSET_MEAN_RECALL, VERLAUF_3_TESTSET_MEAN_RECALL, VERLAUF_4_TESTSET_MEAN_RECALL, VERLAUF_5_TESTSET_MEAN_RECALL])
    VERLAUF_TESTSET_MEAN_RECALL_SECOND_HALF=  np.mean([VERLAUF_1_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_RECALL_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_RECALL: ", VERLAUF_TESTSET_MEAN_RECALL)
    print("VERLAUF_TESTSET_MEAN_RECALL_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_RECALL_SECOND_HALF)


    VERLAUF_1_TESTSET_MEAN_F1 = np.mean(VERLAUF_1_TESTSET_F1)
    VERLAUF_2_TESTSET_MEAN_F1 = np.mean(VERLAUF_2_TESTSET_F1)
    VERLAUF_3_TESTSET_MEAN_F1 = np.mean(VERLAUF_3_TESTSET_F1)
    VERLAUF_4_TESTSET_MEAN_F1 = np.mean(VERLAUF_4_TESTSET_F1)
    VERLAUF_5_TESTSET_MEAN_F1 = np.mean(VERLAUF_5_TESTSET_F1)

    VERLAUF_1_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_F1[-10:])
    VERLAUF_2_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_F1[-10:])
    VERLAUF_3_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_F1[-10:])
    VERLAUF_4_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_F1[-10:])
    VERLAUF_5_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_F1[-10:])

    VERLAUF_TESTSET_MEAN_F1 =  np.mean([VERLAUF_1_TESTSET_MEAN_F1, VERLAUF_2_TESTSET_MEAN_F1, VERLAUF_3_TESTSET_MEAN_F1, VERLAUF_4_TESTSET_MEAN_F1, VERLAUF_5_TESTSET_MEAN_F1])
    VERLAUF_TESTSET_MEAN_F1_SECOND_HALF =  np.mean([VERLAUF_1_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_F1_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_F1: ", VERLAUF_TESTSET_MEAN_F1)
    print("\VERLAUF_TESTSET_MEAN_F1_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_F1_SECOND_HALF)
