import numpy as np
import matplotlib.pyplot as plt

VERLAUF_1_TESTSET_ACCURACY = [0.6599458320794462, 0.6908416089878624, 0.7233423613200923, 0.7332731467549403, 0.7470157488213461, 0.7509278764168924, 0.7571471561841709, 0.762664259203531, 0.761861771491624, 0.7671782525830073, 0.7630655030594844, 0.7732972213862975, 0.774801885846123, 0.7718928678904604, 0.7727956665663557, 0.7744006419901696, 0.7758049954860066, 0.7775102818738088, 0.7757046845220182, 0.7795165011535761]
VERLAUF_1_TESTSET_PRECISION = [0.6570019723865878, 0.6719768283852281, 0.7207225089321159, 0.7472855013838621, 0.7589473684210526, 0.7545324913424323, 0.7576977259005836, 0.7508630609896433, 0.7489499809087438, 0.754836238268531, 0.7527006172839507, 0.7638619620007755, 0.7562254259501966, 0.7721061093247589, 0.7519940641810425, 0.7856993518712105, 0.7530864197530864, 0.7647509578544062, 0.7837949565936337, 0.7637362637362637]
VERLAUF_1_TESTSET_RECALL = [0.6686069851465275, 0.7450822962665596, 0.7288237655560016, 0.7045363307908471, 0.7236049779205138, 0.7434765154556403, 0.7557205941389, 0.7858289843436371, 0.7874347651545563, 0.7910477719791249, 0.7832195905258932, 0.79084704937776, 0.8107185869128863, 0.7711762344439984, 0.8137294259333601, 0.7543155359293456, 0.8203532717784022, 0.8012846246487354, 0.7611401043757527, 0.8091128061019671]
VERLAUF_1_TESTSET_F1 = [0.6627536808595303, 0.7066438225775747, 0.7247504990019961, 0.7252815373488998, 0.7408549116317303, 0.7489637043777172, 0.756707868555924, 0.7679482149862691, 0.7677103718199609, 0.772517886896011, 0.7676568955341333, 0.777120315581854, 0.7825244599438147, 0.7716408917453303, 0.781644654391208, 0.7696876600102406, 0.7852819675281008, 0.782591648696334, 0.7723014256619144, 0.7857699805068226]

VERLAUF_2_TESTSET_ACCURACY = [0.6602467649714113, 0.6913431638078041, 0.7230414284281272, 0.7337747015748821, 0.7473166817133112, 0.7515297422008226, 0.7564449794362523, 0.7638679907713913, 0.7612599057076939, 0.7682816731868793, 0.7629651920954961, 0.7722941117464139, 0.7753034406660648, 0.7724947336743906, 0.7730965994583208, 0.7756043735580299, 0.7805196107934598, 0.7793158792255993, 0.7815227204333434, 0.7819239642892968]
VERLAUF_2_TESTSET_PRECISION = [0.6554883992981088, 0.6724606192286801, 0.7204685328568592, 0.747976139752876, 0.7588816480975404, 0.7556644213104715, 0.7556044835868695, 0.7519171779141104, 0.748093058733791, 0.7545731707317073, 0.7518753606462781, 0.7629945694336695, 0.7552122114668652, 0.7679699842022117, 0.7560240963855421, 0.7885221778431785, 0.7648843382631778, 0.7708333333333334, 0.7881216605014385, 0.7674285714285715]
VERLAUF_2_TESTSET_RECALL =  [0.6748293857888398, 0.7454837414692894, 0.7284223203532718, 0.7047370533922119, 0.7246085909273384, 0.7430750702529105, 0.7577278201525491, 0.7872340425531915, 0.7874347651545563, 0.7948615014050582, 0.7846246487354476, 0.7896427137695704, 0.8143315937374548, 0.7806101967081494, 0.8061019670814934, 0.7529104777197912, 0.8097149739060618, 0.7946607788036933, 0.769771176234444, 0.8087113608992372]
VERLAUF_2_TESTSET_F1 = [0.6650182969043615, 0.7070918610185625, 0.7244235951691785, 0.725713104588673, 0.7413492144984084, 0.7493168707620687, 0.7566646622569653, 0.7691704255736419, 0.7672599256796401, 0.7741935483870966, 0.7679009920440035, 0.7760899585717105, 0.7836584894726676, 0.774238502886721, 0.7802603458325238, 0.7703049594414212, 0.7866614664586583, 0.7825657244514727, 0.778838342810723, 0.787529319781079]

VERLAUF_3_TESTSET_ACCURACY = [0.6585414785836092, 0.6923462734476878, 0.7229411174641388, 0.7337747015748821, 0.746413883037416, 0.7511284983448691, 0.7578493329320894, 0.7628648811315076, 0.7611595947437055, 0.7663757648711004, 0.764068612699368, 0.7691844718627746, 0.7747015748821346, 0.7712910021065302, 0.7742000200621928, 0.7729962884943324, 0.7786137024776808, 0.7805196107934598, 0.7824255191092386, 0.7830273848931688]
VERLAUF_3_TESTSET_PRECISION = [0.6546452371618973, 0.6732404559435499, 0.7200634417129262, 0.747976139752876, 0.7579899074852817, 0.7549439347604485, 0.7571085302362836, 0.7515372790161414, 0.7489948305571511, 0.7527148028195847, 0.7532742681047766, 0.7605442176870748, 0.7566604127579737, 0.7688022284122563, 0.7570111048371918, 0.7830522590047887, 0.7615457115928369, 0.7698995363214838, 0.7863978823050295, 0.7702780441035475]
VERLAUF_3_TESTSET_RECALL = [0.6704134885588118, 0.7468887996788438, 0.7290244881573665, 0.7047370533922119, 0.7236049779205138, 0.7432757928542754, 0.7589321557607387, 0.7850260939381775, 0.7852268165395424, 0.793054997992774, 0.7850260939381775, 0.7854275391409072, 0.8095142513046969, 0.7755921316740265, 0.8073063026896828, 0.7549177037334404, 0.8109193095142513, 0.799879566439181, 0.7751906864712966, 0.8063026896828583]
VERLAUF_3_TESTSET_F1 = [0.6624355414518047, 0.7081549148349034, 0.7245162577299024, 0.725713104588673, 0.7403984391045388, 0.749064428036816, 0.7580192461908583, 0.7679167484783036, 0.7666829985301323, 0.7723585182289122, 0.7688224886966779, 0.7727856225930679, 0.7821955003878976, 0.7721822541966427, 0.7813501699854298, 0.7687276443536024, 0.7854573733838824, 0.7846032683599132, 0.7807540685333064, 0.787878787878788]

VERLAUF_4_TESTSET_ACCURACY = [0.6586417895475976, 0.6915437857357809, 0.7222389407162203, 0.7337747015748821, 0.7465141940014044, 0.7515297422008226, 0.7583508877520313, 0.7627645701675193, 0.7598555522118567, 0.7689838499347978, 0.7644698565553215, 0.7742000200621928, 0.774801885846123, 0.7716922459624836, 0.7731969104223092, 0.7738990871702277, 0.7773096599458321, 0.7791152572976227, 0.7808205436854249, 0.7783127695857157]
VERLAUF_4_TESTSET_PRECISION = [0.6539286410606356, 0.6730804138682156, 0.7195000991866694, 0.7477650063856961, 0.7590208904832243, 0.7556644213104715, 0.7590094624521844, 0.7503348000765258, 0.7468523464326593, 0.7556785646115671, 0.7535618020793223, 0.7667513186169174, 0.7560336763330215, 0.770059880239521, 0.7528340457164096, 0.7880067567567568, 0.7570737155621743, 0.77222875048962, 0.784652961530633, 0.7642012962256958]
VERLAUF_4_TESTSET_RECALL = [0.6732236049779206, 0.7442794058611, 0.7280208751505419, 0.7051384985949418, 0.7219991971095946, 0.7430750702529105, 0.7567242071457246, 0.7872340425531915, 0.7858289843436371, 0.7946607788036933, 0.7856282617422722, 0.7878362103572862, 0.8111200321156162, 0.774387796065837, 0.8131272581292653, 0.7490967482938579, 0.816338819751104, 0.7914492171818547, 0.7737856282617422, 0.804696908871939]
VERLAUF_4_TESTSET_F1 = [0.6634358619325488, 0.7068916213897626, 0.7237354085603114, 0.7258264462809919, 0.7400473202345439, 0.7493168707620687, 0.7578651120715648, 0.7683416593202077, 0.7658450704225352, 0.7746795812542805, 0.7692610062893083, 0.7771507771507771, 0.782608695652174, 0.7722177742193755, 0.7818199363118787, 0.7680592714550318, 0.7855901101023758, 0.7817208564631245, 0.7791814047498737, 0.7839264763394603]

VERLAUF_5_TESTSET_ACCURACY = [0.6592436553315277, 0.6913431638078041, 0.7229411174641388, 0.7331728357909519, 0.7461129501454509, 0.7498244558130204, 0.7559434246163106, 0.7633664359514495, 0.7593539973919149, 0.7679807402949143, 0.761861771491624, 0.7737987762062394, 0.7761059283779718, 0.7727956665663557, 0.7716922459624836, 0.7731969104223092, 0.7760056174139833, 0.778413080549704, 0.7804192998294713, 0.7802186779014947]
VERLAUF_5_TESTSET_PRECISION = [0.6554226318886056, 0.6725856133357492, 0.7199762187871581, 0.7464968152866241, 0.7582718651211802, 0.7538775510204082, 0.7563870448601892, 0.7513896875599003, 0.7465165107845009, 0.7564866423217375, 0.7533022533022533, 0.7653239929947461, 0.7566256065696155, 0.768213228035538, 0.7541322314049587, 0.7858793864257196, 0.7561975768872321, 0.7673028725660305, 0.7835532994923858, 0.7684170032698596]
VERLAUF_5_TESTSET_RECALL = [0.6708149337615416, 0.7450822962665596, 0.7292252107587315, 0.7057406663990365, 0.7221999197109594, 0.7414692894419912, 0.7547169811320755, 0.7868325973504616, 0.7850260939381775, 0.7900441589723003, 0.7784022480931353, 0.7894419911682056, 0.8137294259333601, 0.7810116419108791, 0.8059012444801285, 0.7507025291047772, 0.8143315937374548, 0.7988759534323565, 0.7745885186672019, 0.8018867924528302]
VERLAUF_5_TESTSET_F1 = [0.6630294613629601, 0.7069802875916579, 0.724571200638213, 0.7255468427569128, 0.7397964428909221, 0.7476219388787695, 0.7555510901235808, 0.7687028140013726, 0.7652871538988357, 0.772901325478645, 0.7656465942744324, 0.7771959292560023, 0.7841392649903288, 0.7745595700209017, 0.7791577721715506, 0.7678883071553229, 0.784188653716053, 0.7827711672730849, 0.7790451196123953, 0.7847952067576859]




if __name__ == "__main__":
    VERLAUF_1_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_1_TESTSET_ACCURACY)
    VERLAUF_2_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_2_TESTSET_ACCURACY)
    VERLAUF_3_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_3_TESTSET_ACCURACY)
    VERLAUF_4_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_4_TESTSET_ACCURACY)
    VERLAUF_5_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_5_TESTSET_ACCURACY)

    VERLAUF_1_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_ACCURACY[-10:])
    VERLAUF_2_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_ACCURACY[-10:])
    VERLAUF_3_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_ACCURACY[-10:])
    VERLAUF_4_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_ACCURACY[-10:])
    VERLAUF_5_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_ACCURACY[-10:])

    VERLAUF_TESTSET_MEAN_ACCURACY =  np.mean([VERLAUF_1_TESTSET_MEAN_ACCURACY, VERLAUF_2_TESTSET_MEAN_ACCURACY, VERLAUF_3_TESTSET_MEAN_ACCURACY, VERLAUF_4_TESTSET_MEAN_ACCURACY, VERLAUF_5_TESTSET_MEAN_ACCURACY])
    VERLAUF_TESTSET_MEAN_ACCURACY_SECOND_HALF =  np.mean([VERLAUF_1_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_ACCURACY_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_ACCURACY: ", VERLAUF_TESTSET_MEAN_ACCURACY)
    print("VERLAUF_TESTSET_MEAN_ACCURACY_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_ACCURACY_SECOND_HALF)



    VERLAUF_1_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_1_TESTSET_PRECISION)
    VERLAUF_2_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_2_TESTSET_PRECISION)
    VERLAUF_3_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_3_TESTSET_PRECISION)
    VERLAUF_4_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_4_TESTSET_PRECISION)
    VERLAUF_5_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_5_TESTSET_PRECISION)

    VERLAUF_1_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_PRECISION[-10:])
    VERLAUF_2_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_PRECISION[-10:])
    VERLAUF_3_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_PRECISION[-10:])
    VERLAUF_4_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_PRECISION[-10:])
    VERLAUF_5_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_PRECISION[-10:])

    VERLAUF_TESTSET_MEAN_PRECISION =  np.mean([VERLAUF_1_TESTSET_MEAN_PRECISION, VERLAUF_2_TESTSET_MEAN_PRECISION, VERLAUF_3_TESTSET_MEAN_PRECISION, VERLAUF_4_TESTSET_MEAN_PRECISION, VERLAUF_5_TESTSET_MEAN_PRECISION])
    VERLAUF_TESTSET_MEAN_PRECISION_SECOND_HALF =  np.mean([VERLAUF_1_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_PRECISION_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_PRECISION: ", VERLAUF_TESTSET_MEAN_PRECISION)
    print("VERLAUF_TESTSET_MEAN_PRECISION_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_PRECISION_SECOND_HALF)



    VERLAUF_1_TESTSET_MEAN_RECALL = np.mean(VERLAUF_1_TESTSET_RECALL)
    VERLAUF_2_TESTSET_MEAN_RECALL = np.mean(VERLAUF_2_TESTSET_RECALL)
    VERLAUF_3_TESTSET_MEAN_RECALL = np.mean(VERLAUF_3_TESTSET_RECALL)
    VERLAUF_4_TESTSET_MEAN_RECALL = np.mean(VERLAUF_4_TESTSET_RECALL)
    VERLAUF_5_TESTSET_MEAN_RECALL = np.mean(VERLAUF_5_TESTSET_RECALL)

    VERLAUF_1_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_RECALL[-10:])
    VERLAUF_2_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_RECALL[-10:])
    VERLAUF_3_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_RECALL[-10:])
    VERLAUF_4_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_RECALL[-10:])
    VERLAUF_5_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_RECALL[-10:])

    VERLAUF_TESTSET_MEAN_RECALL=  np.mean([VERLAUF_1_TESTSET_MEAN_RECALL, VERLAUF_2_TESTSET_MEAN_RECALL, VERLAUF_3_TESTSET_MEAN_RECALL, VERLAUF_4_TESTSET_MEAN_RECALL, VERLAUF_5_TESTSET_MEAN_RECALL])
    VERLAUF_TESTSET_MEAN_RECALL_SECOND_HALF=  np.mean([VERLAUF_1_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_RECALL_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_RECALL: ", VERLAUF_TESTSET_MEAN_RECALL)
    print("VERLAUF_TESTSET_MEAN_RECALL_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_RECALL_SECOND_HALF)


    VERLAUF_1_TESTSET_MEAN_F1 = np.mean(VERLAUF_1_TESTSET_F1)
    VERLAUF_2_TESTSET_MEAN_F1 = np.mean(VERLAUF_2_TESTSET_F1)
    VERLAUF_3_TESTSET_MEAN_F1 = np.mean(VERLAUF_3_TESTSET_F1)
    VERLAUF_4_TESTSET_MEAN_F1 = np.mean(VERLAUF_4_TESTSET_F1)
    VERLAUF_5_TESTSET_MEAN_F1 = np.mean(VERLAUF_5_TESTSET_F1)

    VERLAUF_1_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_F1[-10:])
    VERLAUF_2_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_F1[-10:])
    VERLAUF_3_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_F1[-10:])
    VERLAUF_4_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_F1[-10:])
    VERLAUF_5_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_F1[-10:])

    VERLAUF_TESTSET_MEAN_F1 =  np.mean([VERLAUF_1_TESTSET_MEAN_F1, VERLAUF_2_TESTSET_MEAN_F1, VERLAUF_3_TESTSET_MEAN_F1, VERLAUF_4_TESTSET_MEAN_F1, VERLAUF_5_TESTSET_MEAN_F1])
    VERLAUF_TESTSET_MEAN_F1_SECOND_HALF =  np.mean([VERLAUF_1_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_F1_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_F1: ", VERLAUF_TESTSET_MEAN_F1)
    print("\VERLAUF_TESTSET_MEAN_F1_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_F1_SECOND_HALF)
