import numpy as np
import matplotlib.pyplot as plt

VERLAUF_1_TESTSET_ACCURACY = [0.6780018055973518, 0.7214364530043134, 0.7365834085665564, 0.7460126391814625, 0.7540375163005316, 0.7584511987160196, 0.7661751429431237, 0.7705888253586117, 0.7750025077740997, 0.7715919349984953, 0.7761059283779718, 0.7812217875413783, 0.7797171230815528, 0.781422409469355, 0.7848329822449593, 0.7875413782726453, 0.7908516400842612, 0.7919550606881333, 0.7928578593640285, 0.7910522620122379]
VERLAUF_1_TESTSET_PRECISION = [0.6688905833015631, 0.7140361094933023, 0.7285603414823438, 0.7363952142030105, 0.7520924671183739, 0.759790068631409, 0.7624232825183132, 0.7602858798531968, 0.7641272902603664, 0.7684064298471919, 0.7755511022044088, 0.7680382775119617, 0.7662461773700305, 0.7812562713224965, 0.783983983983984, 0.7930822758902988, 0.7738702968425033, 0.7837626854020296, 0.7902487562189054, 0.8030524775245662]
VERLAUF_1_TESTSET_RECALL = [0.7043356081894822, 0.7382577278201525, 0.7537133681252509, 0.7659574468085106, 0.7575270975511843, 0.7555198715375351, 0.7729827378562826, 0.7900441589723003, 0.7952629466077881, 0.7771979124849459, 0.776796467282216, 0.8054997992773987, 0.804696908871939, 0.781413087113609, 0.786029706945002, 0.7778000802890406, 0.8215576073865918, 0.8061019670814934, 0.7970694500200722, 0.7709755118426335]
VERLAUF_1_TESTSET_F1 = [0.6861556511536957, 0.7259449323990921, 0.7409234411996843, 0.7508854781582053, 0.7548, 0.7576489533011272, 0.7676666998903617, 0.7748794172654788, 0.7793842824825415, 0.7727771679473107, 0.776173285198556, 0.7863231115900853, 0.785000979048365, 0.781334671349724, 0.7850055126791621, 0.7853668423186055, 0.7970012656995424, 0.7947753809618048, 0.79364444888578, 0.7866871479774704]

VERLAUF_2_TESTSET_ACCURACY = [0.6785033604172936, 0.7209348981843715, 0.7362824756745913, 0.7461129501454509, 0.7550406259404153, 0.7603571070317986, 0.7649714113752634, 0.7711906911425419, 0.7735981542782626, 0.7732972213862975, 0.7776105928377972, 0.7843314274250176, 0.7817233423613201, 0.7815227204333434, 0.7881432440565754, 0.7890460427324707, 0.7887451098405056, 0.789948841408366, 0.7939612799679004, 0.7917544387601565]
VERLAUF_2_TESTSET_PRECISION = [0.6699177663033085, 0.7140910860256909, 0.7284022519899048, 0.7358091206465268, 0.7527866242038217, 0.7610227501509966, 0.761028684470821, 0.7605633802816901, 0.7633868161608351, 0.7680189050807404, 0.7791237633757319, 0.771264367816092, 0.7750980392156863, 0.7830036334275333, 0.7839335180055401, 0.7972331199669627, 0.7724516862447897, 0.7819211245607185, 0.787171439780306, 0.7998349153941395]
VERLAUF_2_TESTSET_RECALL = [0.7031312725812926, 0.7364512244078684, 0.7531112003211562, 0.76756322761943, 0.7591328783621035, 0.7587314331593737, 0.7721798474508229, 0.7912484945804897, 0.7926535527900441, 0.7828181453231634, 0.7745885186672019, 0.8081091930951425, 0.7934564431955038, 0.7786029706945002, 0.7952629466077881, 0.7749899638699318, 0.8183460457647531, 0.8038940184664793, 0.8054997992773987, 0.7780008028904054]
VERLAUF_2_TESTSET_F1 = [0.6861228087356772, 0.725098814229249, 0.7405506760090792, 0.7513508203163376, 0.7559464321407157, 0.759875364358227, 0.7665637142572482, 0.7756025577963601, 0.7777449532250124, 0.775347912524851, 0.7768495218922999, 0.7892570084297196, 0.7841698075778615, 0.7807971014492754, 0.7895575926664009, 0.7859541984732825, 0.7947368421052631, 0.7927553444180522, 0.7962301587301588, 0.7887667887667886]

VERLAUF_3_TESTSET_ACCURACY = [0.677801183669375, 0.7226401845721737, 0.7366837195305447, 0.7451098405055673, 0.7553415588323804, 0.7602567960678102, 0.7653726552312168, 0.7712910021065302, 0.7733975323502859, 0.773999398134216, 0.7776105928377972, 0.7853345370649012, 0.7818236533253085, 0.7809208546494132, 0.785836091884843, 0.7870398234527034, 0.7917544387601565, 0.7915538168321797, 0.7906510181562845, 0.7903500852643194]
VERLAUF_3_TESTSET_PRECISION = [0.6682509505703422, 0.7157034442498541, 0.72914641259965, 0.7339467126701169, 0.7533373181908747, 0.7623481781376519, 0.7612176319430718, 0.7615176151761518, 0.7641125121241513, 0.7692914939806592, 0.7790110998990918, 0.7720137825421133, 0.7719434218174772, 0.7819427650141072, 0.784756951390278, 0.7895483086894876, 0.7759210026585643, 0.7857142857142857, 0.7856719952634695, 0.7981443298969072]
VERLAUF_3_TESTSET_RECALL = [0.7055399437976716, 0.7382577278201525, 0.7527097551184263, 0.7685668406262545, 0.7589321557607387, 0.755921316740265, 0.7729827378562826, 0.7896427137695704, 0.790646326776395, 0.7824167001204335, 0.7747892412685669, 0.8095142513046969, 0.7996788438378162, 0.7788036932958651, 0.7874347651545563, 0.7824167001204335, 0.8201525491770373, 0.8014853472501003, 0.7990766760337213, 0.7769971898835809]
VERLAUF_3_TESTSET_F1 = [0.68638937707479, 0.726805651615453, 0.7407407407407406, 0.7508579272477693, 0.7561243875612439, 0.7591211449304575, 0.7670550741957972, 0.7753251872290107, 0.777153003847292, 0.7757985869240721, 0.7768944349401227, 0.7903194199490495, 0.7855664004732328, 0.7803700724054706, 0.7860935777978159, 0.7859663272507308, 0.7974238875878219, 0.7935214626391097, 0.7923176435466215, 0.7874288039056143]

VERLAUF_4_TESTSET_ACCURACY = [0.6781021165613401, 0.7208345872203832, 0.7355802989266726, 0.7476176146052763, 0.7535359614805899, 0.7588524425719732, 0.767077941619019, 0.7701875815026582, 0.7746012639181462, 0.7719931788544487, 0.7783127695857157, 0.783629250677099, 0.784732671280971, 0.7845320493529943, 0.7851339151369244, 0.7894472865884241, 0.7876416892366336, 0.7907513291202728, 0.792456615508075, 0.7896479085164009]
VERLAUF_4_TESTSET_PRECISION = [0.6683121321435352, 0.7137026239067056, 0.7269736842105263, 0.738030888030888, 0.7525505101020205, 0.7622050447518307, 0.7645186953062848, 0.7603017991874638, 0.7643533732843611, 0.7685901249256395, 0.7776442307692307, 0.7721055673280678, 0.7735339506172839, 0.7860314897052887, 0.7826433121019108, 0.788011988011988, 0.7724938177667872, 0.7845911949685535, 0.8038806592948049, 0.8008342022940563]
VERLAUF_4_TESTSET_RECALL = [0.7065435568044962, 0.7370533922119631, 0.7541148133279807, 0.767362505018065, 0.7551184263348053, 0.7521075873143316, 0.7715776796467282, 0.7888398233641108, 0.7936571657968687, 0.7780008028904054, 0.779205138498595, 0.8044961862705741, 0.8048976314733038, 0.7816138097149739, 0.7892412685668406, 0.7916499397832196, 0.8151344841429145, 0.8012846246487354, 0.7733841830590125, 0.7707747892412685]
VERLAUF_4_TESTSET_F1 = [0.6868962825641526, 0.7251900859089563, 0.740295566502463, 0.7524109427278094, 0.7538322813345357, 0.7571226510406142, 0.768031968031968, 0.7743079499556694, 0.7787296898079764, 0.7732668329177057, 0.7784239021455784, 0.7879681509879091, 0.7889041904387172, 0.7838164251207729, 0.7859284429342394, 0.7898267748072495, 0.7932415274929191, 0.7928500496524329, 0.7883375959079284, 0.7855170297637312]

VERLAUF_5_TESTSET_ACCURACY = [0.6790049152372354, 0.721336142040325, 0.7355802989266726, 0.7465141940014044, 0.7543384491924967, 0.7586518206439964, 0.7653726552312168, 0.7702878924666466, 0.7720934898184372, 0.7722941117464139, 0.7768081051258903, 0.7819239642892968, 0.7809208546494132, 0.781422409469355, 0.7877420002006219, 0.7864379576687732, 0.7894472865884241, 0.7900491523723543, 0.7919550606881333, 0.790249774300331]
VERLAUF_5_TESTSET_PRECISION = [0.6692629179331308, 0.714063714063714, 0.7273255813953489, 0.7367405978784957, 0.7528448792174086, 0.7595727529222088, 0.7612176319430718, 0.7590454195535027, 0.7607775211701309, 0.7683023347843293, 0.7750947914587907, 0.7697924673328209, 0.7705996131528047, 0.7810306797673953, 0.784551231135822, 0.7882400484946454, 0.7725467952353943, 0.7839591114605858, 0.7972199509403107, 0.8017115424754748]
VERLAUF_5_TESTSET_RECALL = [0.7071457246085909, 0.7378562826174228, 0.753311922922521, 0.7667603372139703, 0.7569249297470895, 0.7565234845443597, 0.7729827378562826, 0.7916499397832196, 0.7934564431955038, 0.7794058610999599, 0.7796065837013247, 0.8040947410678443, 0.7996788438378162, 0.7818145323163388, 0.793054997992774, 0.7830188679245284, 0.8201525491770373, 0.8004817342432758, 0.7828181453231634, 0.7709755118426335]
VERLAUF_5_TESTSET_F1 = [0.6876829982432169, 0.7257650542941756, 0.7400907118911457, 0.7514507721058326, 0.7548793914523071, 0.7580450522928399, 0.7670550741957972, 0.7750049125564944, 0.7767734328944783, 0.7738142686329216, 0.7773441408986289, 0.7865698016885921, 0.784869976359338, 0.7814224094693552, 0.788780195647834, 0.7856207834054979, 0.7956382046538799, 0.792134273512762, 0.7899534130038486, 0.7860431801903203]




if __name__ == "__main__":
    VERLAUF_1_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_1_TESTSET_ACCURACY)
    VERLAUF_2_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_2_TESTSET_ACCURACY)
    VERLAUF_3_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_3_TESTSET_ACCURACY)
    VERLAUF_4_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_4_TESTSET_ACCURACY)
    VERLAUF_5_TESTSET_MEAN_ACCURACY = np.mean(VERLAUF_5_TESTSET_ACCURACY)

    VERLAUF_1_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_ACCURACY[-10:])
    VERLAUF_2_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_ACCURACY[-10:])
    VERLAUF_3_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_ACCURACY[-10:])
    VERLAUF_4_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_ACCURACY[-10:])
    VERLAUF_5_TESTSET_MEAN_ACCURACY_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_ACCURACY[-10:])

    VERLAUF_TESTSET_MEAN_ACCURACY =  np.mean([VERLAUF_1_TESTSET_MEAN_ACCURACY, VERLAUF_2_TESTSET_MEAN_ACCURACY, VERLAUF_3_TESTSET_MEAN_ACCURACY, VERLAUF_4_TESTSET_MEAN_ACCURACY, VERLAUF_5_TESTSET_MEAN_ACCURACY])
    VERLAUF_TESTSET_MEAN_ACCURACY_SECOND_HALF =  np.mean([VERLAUF_1_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_ACCURACY_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_ACCURACY_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_ACCURACY: ", VERLAUF_TESTSET_MEAN_ACCURACY)
    print("VERLAUF_TESTSET_MEAN_ACCURACY_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_ACCURACY_SECOND_HALF)



    VERLAUF_1_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_1_TESTSET_PRECISION)
    VERLAUF_2_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_2_TESTSET_PRECISION)
    VERLAUF_3_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_3_TESTSET_PRECISION)
    VERLAUF_4_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_4_TESTSET_PRECISION)
    VERLAUF_5_TESTSET_MEAN_PRECISION = np.mean(VERLAUF_5_TESTSET_PRECISION)

    VERLAUF_1_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_PRECISION[-10:])
    VERLAUF_2_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_PRECISION[-10:])
    VERLAUF_3_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_PRECISION[-10:])
    VERLAUF_4_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_PRECISION[-10:])
    VERLAUF_5_TESTSET_MEAN_PRECISION_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_PRECISION[-10:])

    VERLAUF_TESTSET_MEAN_PRECISION =  np.mean([VERLAUF_1_TESTSET_MEAN_PRECISION, VERLAUF_2_TESTSET_MEAN_PRECISION, VERLAUF_3_TESTSET_MEAN_PRECISION, VERLAUF_4_TESTSET_MEAN_PRECISION, VERLAUF_5_TESTSET_MEAN_PRECISION])
    VERLAUF_TESTSET_MEAN_PRECISION_SECOND_HALF =  np.mean([VERLAUF_1_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_PRECISION_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_PRECISION_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_PRECISION: ", VERLAUF_TESTSET_MEAN_PRECISION)
    print("VERLAUF_TESTSET_MEAN_PRECISION_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_PRECISION_SECOND_HALF)



    VERLAUF_1_TESTSET_MEAN_RECALL = np.mean(VERLAUF_1_TESTSET_RECALL)
    VERLAUF_2_TESTSET_MEAN_RECALL = np.mean(VERLAUF_2_TESTSET_RECALL)
    VERLAUF_3_TESTSET_MEAN_RECALL = np.mean(VERLAUF_3_TESTSET_RECALL)
    VERLAUF_4_TESTSET_MEAN_RECALL = np.mean(VERLAUF_4_TESTSET_RECALL)
    VERLAUF_5_TESTSET_MEAN_RECALL = np.mean(VERLAUF_5_TESTSET_RECALL)

    VERLAUF_1_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_RECALL[-10:])
    VERLAUF_2_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_RECALL[-10:])
    VERLAUF_3_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_RECALL[-10:])
    VERLAUF_4_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_RECALL[-10:])
    VERLAUF_5_TESTSET_MEAN_RECALL_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_RECALL[-10:])

    VERLAUF_TESTSET_MEAN_RECALL=  np.mean([VERLAUF_1_TESTSET_MEAN_RECALL, VERLAUF_2_TESTSET_MEAN_RECALL, VERLAUF_3_TESTSET_MEAN_RECALL, VERLAUF_4_TESTSET_MEAN_RECALL, VERLAUF_5_TESTSET_MEAN_RECALL])
    VERLAUF_TESTSET_MEAN_RECALL_SECOND_HALF=  np.mean([VERLAUF_1_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_RECALL_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_RECALL_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_RECALL: ", VERLAUF_TESTSET_MEAN_RECALL)
    print("VERLAUF_TESTSET_MEAN_RECALL_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_RECALL_SECOND_HALF)


    VERLAUF_1_TESTSET_MEAN_F1 = np.mean(VERLAUF_1_TESTSET_F1)
    VERLAUF_2_TESTSET_MEAN_F1 = np.mean(VERLAUF_2_TESTSET_F1)
    VERLAUF_3_TESTSET_MEAN_F1 = np.mean(VERLAUF_3_TESTSET_F1)
    VERLAUF_4_TESTSET_MEAN_F1 = np.mean(VERLAUF_4_TESTSET_F1)
    VERLAUF_5_TESTSET_MEAN_F1 = np.mean(VERLAUF_5_TESTSET_F1)

    VERLAUF_1_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_1_TESTSET_F1[-10:])
    VERLAUF_2_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_2_TESTSET_F1[-10:])
    VERLAUF_3_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_3_TESTSET_F1[-10:])
    VERLAUF_4_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_4_TESTSET_F1[-10:])
    VERLAUF_5_TESTSET_MEAN_F1_SECOND_HALF = np.mean(VERLAUF_5_TESTSET_F1[-10:])

    VERLAUF_TESTSET_MEAN_F1 =  np.mean([VERLAUF_1_TESTSET_MEAN_F1, VERLAUF_2_TESTSET_MEAN_F1, VERLAUF_3_TESTSET_MEAN_F1, VERLAUF_4_TESTSET_MEAN_F1, VERLAUF_5_TESTSET_MEAN_F1])
    VERLAUF_TESTSET_MEAN_F1_SECOND_HALF =  np.mean([VERLAUF_1_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_2_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_3_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_4_TESTSET_MEAN_F1_SECOND_HALF, VERLAUF_5_TESTSET_MEAN_F1_SECOND_HALF])
    print("\nVERLAUF_TESTSET_MEAN_F1: ", VERLAUF_TESTSET_MEAN_F1)
    print("\VERLAUF_TESTSET_MEAN_F1_SECOND_HALF: ", VERLAUF_TESTSET_MEAN_F1_SECOND_HALF)
